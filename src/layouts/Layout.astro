---
import Navigation from "../components/Navigation.astro"
import type { MarkdownLayoutProps } from 'astro';

import '../styles/all.scss';

type Props = MarkdownLayoutProps<{
  title: string;
}>;

const { frontmatter } = Astro.props;
const { title } = frontmatter
---
<!doctype html>
<html>
  <head>
    <title>{ title || "character.construction" }</title>

    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="description" content="Current Unicode characters, codepoints, Emoji and other resources"/>
    <meta name="keywords" content="unicode, codepoints, data, emoji"/>

    <script>
import ClipboardJS from "clipboard"

function scrollTo(href, cb) {
  if(window) {
    if(document.body.scrollIntoView) {
      document.querySelector(href).scrollIntoView({
        behavior: 'smooth'
      })
      if(cb){ setTimeout(cb, 200) }
    } else {
      window.location.href = href
      if(cb){ cb() }
    }
  }
}

function registerScroll() {
  document.querySelectorAll('a[href^="#"]').forEach(function(a){
    a.addEventListener("click", function(event) {
      event.preventDefault()
      scrollTo(a.hash)
    })
  })
}

function registerShake() {
  document.querySelectorAll('.u,.n,.f,.c, .b, .b2, .box, .h').forEach(function(e){
    var shakeInProgressTimeout = null
    e.addEventListener('click', function(){
      if(shakeInProgressTimeout){
        clearTimeout(shakeInProgressTimeout)
        shakeInProgressTimeout = null
        e.classList.remove('shake')
      } else {
        e.classList.add('shake')
        shakeInProgressTimeout = setTimeout(function(){
          e.classList.remove('shake')
          shakeInProgressTimeout = null
        }, 1400)
      }
    })
  })
}

function registerLinkHeadings() {
  ['h2', 'h3'].forEach(function(h){
    document.querySelectorAll(h).forEach(function(e){
      e.innerHTML = '<a href="#' + e.id + '">' + e.innerHTML + '</a>'
    })
  })
}

function registerClipboard() {
  new ClipboardJS('.c, .e, .f, .n, .h', {
    text: function(trigger) {
      return trigger.textContent
    }
  }).on("success", function(e) {
    // console.log("copy: " + e.text)
  })

  new ClipboardJS('.b, .b2', {
    text: function(trigger) {
      return trigger.children[0].textContent
    }
  }).on("success", function(e) {
    // console.log("copy: " + e.text)
  })

  new ClipboardJS('.box', {
    text: function(trigger) {
      return trigger.textContent.trim()
    }
  }).on("success", function(e) {
    // console.log("copy: " + e.text)
  })
}

document.addEventListener('DOMContentLoaded', registerShake)
document.addEventListener('DOMContentLoaded', registerScroll)
document.addEventListener('DOMContentLoaded', registerLinkHeadings)
document.addEventListener('DOMContentLoaded', registerClipboard)
    </script>
  </head>

  <body>
    <div class="world">
      <section class="post-header">
        <a class="cc" href="/">[ character.construction ]</a>
        <Navigation />
      </section>

     	<article class="post">
        <slot />
      </article>

      <footer>
        <a href="/" class="action">character.construction</a> is curated by <a rel="me" href="https://ruby.social/@idiosyncratic">Jan Lelis</a><br/>
        Unicode 16.0 (September 2024) / Emoji 16.0 (September 2024)<br/>
        <a href="https://janlelis.com/data-protection">Privacy Policy</a>
      </footer>
    </div>

    <a href="https://github.com/janlelis/character.construction"><img style="position: absolute; top: 0; right: 0; border: 0;" src="/forkme.png" alt="Fork me on GitHub"></a>
  </body>
</html>
